@model Proyecto_Gaming.Areas.Admin.Controllers.AdminDashboardVm
@{
    ViewData["Title"] = "Panel de Administraci√≥n";
}

<h2 class="mb-4">Panel de Administraci√≥n</h2>

<div class="row g-3">
    <div class="col-md-3">
        <div class="card bg-dark text-light border-secondary">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="h5 mb-0">@Model.TotalUsers</div>
                        <small class="text-secondary">Usuarios totales</small>
                    </div>
                    <i class="fas fa-users fa-2x text-secondary"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark text-light border-secondary">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="h5 mb-0">@Model.AdminUsers</div>
                        <small class="text-secondary">Administradores</small>
                    </div>
                    <i class="fas fa-user-shield fa-2x text-secondary"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-dark text-light border-secondary">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <div class="h5 mb-0">@Model.LockedUsers</div>
                        <small class="text-secondary">Bloqueados</small>
                    </div>
                    <i class="fas fa-user-lock fa-2x text-secondary"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <a class="btn btn-primary w-100" asp-area="Admin" asp-controller="Users" asp-action="Index">
            Gestionar Usuarios
        </a>
    </div>
</div>

<hr class="my-4 text-secondary" />

<!-- üî• Actividad reciente -->
<div class="card bg-dark border-secondary">
    <div class="card-header bg-transparent border-secondary">
        <h5 class="mb-0 text-light">
            <i class="fas fa-stream text-info me-2"></i> Actividad reciente del sistema
        </h5>
    </div>
    <div class="card-body" id="activity-log">
        <p class="text-muted mb-0">Cargando eventos...</p>
    </div>
</div>

<style>
    /* Asegura buen contraste en tema oscuro */
    #activity-log {
        color: #e6e6e6;
    }
    #activity-log .text-muted {
        color: #b8b8b8 !important;
    }
    .card-header.bg-transparent h5 {
        color: #e6e6e6;
    }
    .border-info {
        --bs-border-opacity: 1;
        border-left: 3px solid rgba(13, 202, 240, var(--bs-border-opacity)) !important;
    }
</style>

@section Scripts {
<script>
(async () => {
    const logContainer = document.getElementById('activity-log');
    try {
        const res = await fetch('@Url.Action("Activity", "Dashboard", new { area = "Admin" })');
        if (!res.ok) throw new Error("No se pudo obtener la actividad.");
        const logs = await res.json();

        logContainer.innerHTML = "";

        if (logs.length === 0) {
            logContainer.innerHTML = `<p class="text-muted mb-0">Sin actividad registrada.</p>`;
            return;
        }

        logs.forEach(l => {
            const icon = l.action.toLowerCase().includes("usuario") ? "üßç" :
                         l.action.toLowerCase().includes("bloqueado") ? "üîí" :
                         l.action.toLowerCase().includes("admin") ? "üëë" : "‚öôÔ∏è";

            const html = `
                <div class="border-start border-info ps-3 mb-3">
                    <div>${icon} <strong>${l.action}</strong></div>
                    <small class="text-muted">
                        ${new Date(l.timestamp).toLocaleString()} 
                        ‚Äî ${l.performedBy || "Sistema"}
                        ${l.targetUser ? " ( " + l.targetUser + " )" : ""}
                    </small>
                </div>
            `;
            logContainer.insertAdjacentHTML('beforeend', html);
        });
    } catch (err) {
        logContainer.innerHTML = `<p class="text-danger">${err.message}</p>`;
    }
})();
</script>
}
