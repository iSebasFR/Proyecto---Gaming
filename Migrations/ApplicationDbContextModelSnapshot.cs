// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Proyecto_Gaming.Data;

#nullable disable

namespace Proyecto_Gaming.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Proyecto_Gaming.Models.BibliotecaUsuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<int>("IdJuego")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("estado");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("IdUsuario", "IdJuego");

                    b.HasIndex("IdJuego");

                    b.ToTable("BibliotecaUsuario", (string)null);
                });

            modelBuilder.Entity("Proyecto_Gaming.Models.Juego", b =>
                {
                    b.Property<int>("IdJuego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_juego");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdJuego"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("categoria");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("imagen");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Plataforma")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("plataforma");

                    b.Property<decimal?>("PuntuacionMedia")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)")
                        .HasColumnName("puntuacion_media");

                    b.HasKey("IdJuego");

                    b.ToTable("Juegos", (string)null);
                });

            modelBuilder.Entity("Proyecto_Gaming.Models.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("biografia")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("biografia");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contraseña");

                    b.Property<string>("correo_electronico")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("correo_electronico");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("fecha_nacimiento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_nacimiento");

                    b.Property<DateTime>("fecha_registro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("foto_perfil")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("foto_perfil");

                    b.Property<string>("nombre_real")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre_real");

                    b.Property<string>("nombre_usuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("pais")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("pais");

                    b.Property<string>("plataforma_preferida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("plataforma_preferida");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Proyecto_Gaming.Models.BibliotecaUsuario", b =>
                {
                    b.HasOne("Proyecto_Gaming.Models.Juego", "Juego")
                        .WithMany("BibliotecaUsuarios")
                        .HasForeignKey("IdJuego")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto_Gaming.Models.Usuario", "Usuario")
                        .WithMany("BibliotecaUsuarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Juego");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto_Gaming.Models.Juego", b =>
                {
                    b.Navigation("BibliotecaUsuarios");
                });

            modelBuilder.Entity("Proyecto_Gaming.Models.Usuario", b =>
                {
                    b.Navigation("BibliotecaUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
