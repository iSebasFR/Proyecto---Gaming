@model Proyecto_Gaming.ViewModels.PerfilViewModel
@{
    ViewData["Title"] = "Perfil de Usuario";
}



<div class="container-fluid">
    <div class="row">
        <!-- Columna Principal -->
        <div class="col-lg-8">
            <!-- Header del Perfil - MEJORADO -->
            <div class="card profile-header mb-4" style="background: rgba(35, 40, 48, 0.95); border: none; border-radius: 15px; backdrop-filter: blur(10px);">
                <div class="card-body p-4">
                    <div class="row align-items-center">
                        <div class="col-md-3 text-center">
                            <div class="avatar-container mb-3">
                                @if (!string.IsNullOrEmpty(Model.Usuario.FotoPerfil))
                                {
                                    <img src="@Model.Usuario.FotoPerfil" class="avatar-img" alt="Avatar">
                                }
                                else
                                {
                                    <div class="avatar-placeholder">
                                        <i class="fas fa-user fa-3x text-white"></i>
                                    </div>
                                }
                                <div class="online-status"></div>
                            </div>
                            <!-- CAMBIO: Usar DisplayName si existe, sino UserName -->
                            <h4 class="text-white mb-1 fw-bold">@(Model.Usuario.DisplayName ?? Model.Usuario.UserName)</h4>
                            @if (!string.IsNullOrEmpty(Model.Usuario.NombreReal))
                            {
                                <p class="text-white mb-2 opacity-75">@Model.Usuario.NombreReal</p>
                            }
                            <span class="badge bg-success px-3 py-2">En línea</span>
                        </div>
                        <div class="col-md-5">
                            <blockquote class="blockquote m-0">
                                <p class="mb-2 text-white fs-6">
                                    <i>"@(string.IsNullOrEmpty(Model.Usuario.Biografia) ? "Este usuario aún no ha agregado una biografía." : Model.Usuario.Biografia)"</i>
                                </p>
                            </blockquote>
                        </div>
                        <div class="col-md-4">
                            <div class="stats-grid text-center">
                                <div class="stat-item">
                                    <h4 class="text-white mb-1 fw-bold">@Model.TotalJuegos</h4>
                                    <small class="text-white opacity-75">Juegos</small>
                                </div>
                                <div class="stat-item">
                                    <h4 class="text-white mb-1 fw-bold">-</h4>
                                    <small class="text-white opacity-75">Amigos</small>
                                </div>
                                <div class="stat-item">
                                    <h4 class="text-white mb-1 fw-bold">-</h4>
                                    <small class="text-white opacity-75">Grupos</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Contenido Principal - MEJORADO -->
            <div class="row g-4">
                <!-- Columna Izquierda - MEJORADA -->
                <div class="col-md-7">
                    <!-- Actividad Reciente -->
                    <div class="card h-100" style="background: rgba(35, 40, 48, 0.95); border: none; border-radius: 15px; backdrop-filter: blur(10px);">
                        <div class="card-header bg-transparent border-secondary">
                            <h5 class="text-white mb-0 fw-bold"><i class="fas fa-history me-2"></i>Actividad Reciente</h5>
                        </div>
                        <div class="card-body">
                            @if (Model.BibliotecaReciente.Any())
                            {
                                foreach (var juego in Model.BibliotecaReciente)
                                {
                                    <div class="activity-item mb-3 p-3 rounded-3">
                                        <div class="d-flex align-items-center">
                                            <img src="@juego.GameImage" class="activity-game-img shadow" alt="@juego.GameName">
                                            <div class="ms-3 flex-grow-1">
                                                <h6 class="text-white mb-1 fw-bold">@juego.GameName</h6>
                                                <p class="text-white mb-1 opacity-75">
                                                    @if (juego.Estado == "Completado" && juego.FechaCompletado.HasValue)
                                                    {
                                                        <span>Completado el @juego.FechaCompletado.Value.ToString("dd/MM/yyyy")</span>
                                                    }
                                                    else
                                                    {
                                                        <span>Agregado a @juego.Estado</span>
                                                    }
                                                </p>
                                                <small class="text-white opacity-50">Hace 2 días</small>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center py-4">
                                    <i class="fas fa-inbox fa-2x text-white opacity-50 mb-3"></i>
                                    <p class="text-white opacity-75">Aún no hay actividad reciente</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Columna Derecha - MEJORADA -->
                <div class="col-md-5">
                    <!-- Información del Usuario -->
                    <div class="card mb-4" style="background: rgba(35, 40, 48, 0.95); border: none; border-radius: 15px; backdrop-filter: blur(10px);">
                        <div class="card-header bg-transparent border-secondary">
                            <h5 class="text-white mb-0 fw-bold"><i class="fas fa-info-circle me-2"></i>Información</h5>
                        </div>
                        <div class="card-body">
                            <div class="info-item mb-3 p-3 rounded-3 bg-dark bg-opacity-25">
                                <small class="text-white opacity-75 d-block">Miembro desde</small>
                                <p class="text-white mb-0 fw-semibold">@Model.Usuario.FechaRegistro.ToString("dd/MM/yyyy")</p>
                            </div>
                            @if (Model.Usuario.FechaNacimiento != DateTime.MinValue)
                            {
                                <div class="info-item mb-3 p-3 rounded-3 bg-dark bg-opacity-25">
                                    <small class="text-white opacity-75 d-block">Fecha de nacimiento</small>
                                    <p class="text-white mb-0 fw-semibold">@Model.Usuario.FechaNacimiento.ToString("dd/MM/yyyy")</p>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Usuario.Pais))
                            {
                                <div class="info-item mb-3 p-3 rounded-3 bg-dark bg-opacity-25">
                                    <small class="text-white opacity-75 d-block">País</small>
                                    <p class="text-white mb-0 fw-semibold">@Model.Usuario.Pais</p>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Usuario.PlataformaPreferida))
                            {
                                <div class="info-item p-3 rounded-3 bg-dark bg-opacity-25">
                                    <small class="text-white opacity-75 d-block">Plataformas preferidas</small>
                                    <p class="text-white mb-0 fw-semibold">@Model.Usuario.PlataformaPreferida.Replace(",", ", ")</p>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Biblioteca de Juegos -->
                    <div class="card" style="background: rgba(35, 40, 48, 0.95); border: none; border-radius: 15px; backdrop-filter: blur(10px);">
                        <div class="card-header bg-transparent border-secondary">
                            <h5 class="text-white mb-0 fw-bold"><i class="fas fa-gamepad me-2"></i>Biblioteca de Juegos</h5>
                        </div>
                        <div class="card-body">
                            @if (Model.JuegosDestacados.Any())
                            {
                                foreach (var juego in Model.JuegosDestacados)
                                {
                                    <div class="game-item mb-3 p-3 rounded-3">
                                        <div class="d-flex align-items-center">
                                            <img src="@juego.GameImage" class="game-thumbnail shadow" alt="@juego.GameName">
                                            <div class="ms-3 flex-grow-1">
                                                <h6 class="text-white mb-1 fw-bold">@juego.GameName</h6>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <span class="badge bg-primary px-2 py-1">@juego.Estado</span>
                                                    <small class="text-white opacity-75">20 horas</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="text-center mt-3 pt-3 border-top border-secondary">
                                    <a asp-controller="Biblioteca" asp-action="Index" class="btn btn-primary btn-sm px-4">
                                        <i class="fas fa-list me-2"></i>Ver Biblioteca Completa
                                    </a>
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-4">
                                    <i class="fas fa-gamepad fa-2x text-white opacity-50 mb-3"></i>
                                    <p class="text-white opacity-75">Aún no hay juegos en la biblioteca</p>
                                    <a asp-controller="Biblioteca" asp-action="Index" class="btn btn-primary btn-sm mt-2">
                                        <i class="fas fa-plus me-2"></i>Explorar Juegos
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar de Estadísticas - MEJORADO -->
        <div class="col-lg-4">
            <!-- Amigos en Común -->
            <div class="card mb-4" style="background: rgba(35, 40, 48, 0.95); border: none; border-radius: 15px; backdrop-filter: blur(10px);">
                <div class="card-header bg-transparent border-secondary">
                    <h5 class="text-white mb-0 fw-bold"><i class="fas fa-users me-2"></i>Amigos en Común</h5>
                </div>
                <div class="card-body">
                    @foreach (var amigo in Model.AmigosVisual)
                    {
                        <div class="friend-item mb-3 p-3 rounded-3">
                            <div class="d-flex align-items-center">
                                <div class="friend-avatar me-3">
                                    <div class="avatar-circle">
                                        @amigo.Avatar
                                    </div>
                                    <div class="status-indicator @(amigo.Estado == "En Línea" ? "online" : "away")"></div>
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="text-white mb-0 fw-bold">@amigo.Nombre</h6>
                                    <small class="text-white opacity-75">@amigo.Estado</small>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="text-center mt-3 pt-3 border-top border-secondary">
                        <button class="btn btn-outline-primary btn-sm px-4" disabled>
                            <i class="fas fa-user-friends me-2"></i>Ver Todos los Amigos
                        </button>
                    </div>
                </div>
            </div>

            <!-- Resumen de Estadísticas -->
            <div class="card" style="background: rgba(35, 40, 48, 0.95); border: none; border-radius: 15px; backdrop-filter: blur(10px);">
                <div class="card-header bg-transparent border-secondary">
                    <h5 class="text-white mb-0 fw-bold"><i class="fas fa-chart-pie me-2"></i>Resumen de Juegos</h5>
                </div>
                <div class="card-body">
                    <div class="stat-summary">
                        <div class="stat-row mb-3 p-3 rounded-3 bg-dark bg-opacity-25">
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="text-white">Total Juegos</span>
                                <span class="text-white fw-bold">@Model.TotalJuegos</span>
                            </div>
                        </div>
                        <div class="stat-row mb-3 p-3 rounded-3 bg-dark bg-opacity-25">
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="text-white">Horas Totales</span>
                                <span class="text-white fw-bold">-</span>
                            </div>
                        </div>
                        <div class="stat-row mb-3 p-3 rounded-3 bg-dark bg-opacity-25">
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="text-white">Juegos Completados</span>
                                <span class="text-white fw-bold">-</span>
                            </div>
                        </div>
                        <div class="stat-row p-3 rounded-3 bg-dark bg-opacity-25">
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="text-white">Logros Desbloqueados</span>
                                <span class="text-white fw-bold">-</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .profile-header {
            background: linear-gradient(135deg, rgba(108, 92, 231, 0.15) 0%, rgba(182, 45, 206, 0.15) 100%) !important;
            border: 1px solid rgba(108, 92, 231, 0.3) !important;
        }

        .avatar-container {
            position: relative;
            display: inline-block;
        }

        .avatar-img {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid var(--primary);
            box-shadow: 0 4px 15px rgba(108, 92, 231, 0.3);
        }

        .avatar-placeholder {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background: var(--primary-gradient);
            display: flex;
            align-items: center;
            justify-content: center;
            border: 3px solid var(--primary);
            box-shadow: 0 4px 15px rgba(108, 92, 231, 0.3);
        }

        .online-status {
            position: absolute;
            bottom: 8px;
            right: 8px;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background: var(--success);
            border: 2px solid rgba(35, 40, 48, 0.95);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 12px;
        }

        .stat-item {
            padding: 12px 8px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .stat-item:hover {
            background: rgba(255, 255, 255, 0.12);
            transform: translateY(-2px);
        }

        .activity-game-img, .game-thumbnail {
            width: 60px;
            height: 60px;
            border-radius: 10px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .activity-game-img:hover, .game-thumbnail:hover {
            transform: scale(1.05);
        }

        .friend-avatar {
            position: relative;
        }

        .avatar-circle {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: var(--primary-gradient);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 0.9rem;
            box-shadow: 0 3px 10px rgba(108, 92, 231, 0.3);
        }

        .status-indicator {
            position: absolute;
            bottom: 2px;
            right: 2px;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            border: 2px solid rgba(35, 40, 48, 0.95);
        }

        .status-indicator.online {
            background: var(--success);
            box-shadow: 0 0 8px var(--success);
        }

        .status-indicator.away {
            background: var(--warning);
            box-shadow: 0 0 8px var(--warning);
        }

        .activity-item, .game-item, .friend-item {
            transition: all 0.3s ease;
            border: 1px solid transparent;
        }

        .activity-item:hover, .game-item:hover, .friend-item:hover {
            background: rgba(255, 255, 255, 0.08) !important;
            border-color: rgba(108, 92, 231, 0.3);
            transform: translateY(-2px);
        }

        .text-white {
            color: white !important;
        }

        .card {
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 35px rgba(0, 0, 0, 0.3);
        }

        .border-secondary {
            border-color: rgba(255, 255, 255, 0.1) !important;
        }

        .btn-primary {
            background: var(--primary-gradient);
            border: none;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(108, 92, 231, 0.4);
        }

        .btn-outline-primary {
            border-color: var(--primary);
            color: var(--primary);
            font-weight: 600;
        }

        .btn-outline-primary:hover {
            background: var(--primary);
            color: white;
            transform: translateY(-2px);
        }
    </style>
}