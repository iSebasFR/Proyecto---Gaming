@model Proyecto_Gaming.ViewModels.GameCatalogViewModel

@{
    ViewData["Title"] = "Catálogo de Juegos";
}

<!-- Segunda Navbar (Secundaria) -->
<nav class="navbar navbar-expand-lg mb-4" style="background-color: #B62DCE; border-radius: 25px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); height: 50px; padding: 5px 0; max-width: 650px; margin: 0 auto;">
    <div class="container-fluid justify-content-center">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link text-white fw-bold" asp-action="Pendientes">Pendiente</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white fw-bold" href="#">Jugando</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white fw-bold" href="#">Completados</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-white fw-bold active" asp-action="Index">Catálogo</a>
            </li>
        </ul>
    </div>
</nav>

<!-- Filtros - ACTUALIZADOS CON OPCIONES DINÁMICAS -->
<div class="filter-section bg-dark rounded p-4 mb-4">
    <form asp-action="Index" method="get" class="row g-3 align-items-end">
        <div class="col-md-5">
            <label class="form-label text-white">Filtrar por género:</label>
            <select name="genre" class="form-select">
                <option value="">Todos los géneros</option>
                @foreach (var genre in Model.AvailableGenres)
                {
                    <option value="@genre.Value" selected="@genre.Selected">@genre.Text</option>
                }
            </select>
        </div>
        <div class="col-md-5">
            <label class="form-label text-white">Filtrar por plataforma:</label>
            <select name="platform" class="form-select">
                <option value="">Todas las plataformas</option>
                @foreach (var platform in Model.AvailablePlatforms)
                {
                    <option value="@platform.Value" selected="@platform.Selected">@platform.Text</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100 h-100">
                <i class="fas fa-search"></i> Buscar
            </button>
        </div>
        
        <!-- Botón para limpiar filtros -->
        @if (!string.IsNullOrEmpty(Model.SelectedGenre) || !string.IsNullOrEmpty(Model.SelectedPlatform))
        {
            <div class="col-12 text-center mt-3">
                <a asp-action="Index" class="btn btn-outline-warning btn-sm">
                    <i class="fas fa-times"></i> Limpiar filtros
                </a>
            </div>
        }
    </form>
</div>

<!-- Juegos desde RAWG API -->
@if (Model.Games.Any())
{
    <div class="row">
        @foreach (var game in Model.Games)
        {
            <div class="col-md-4 mb-4">
                <div class="game-card card h-100 shadow">
                    <img src="@game.BackgroundImage" class="card-img-top" alt="@game.Name" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h5 class="card-title">@game.Name</h5>
                        <p class="card-text">
                            @if (game.Released != null)
                            {
                                <small class="text-muted">Lanzamiento: @DateTime.Parse(game.Released).ToString("yyyy")</small>
                            }
                        </p>
                        <p class="card-text">
                            @foreach (var genre in game.Genres.Take(2))
                            {
                                <span class="badge bg-primary me-1">@genre.Name</span>
                            }
                            @foreach (var platform in game.Platforms.Take(2))
                            {
                                <span class="badge bg-secondary me-1">@platform.Platform.Name</span>
                            }
                        </p>
                        <div class="game-rating mb-2">
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= game.Rating)
                                {
                                    <i class="fas fa-star text-warning"></i>
                                }
                                else if (i - 0.5 <= game.Rating)
                                {
                                    <i class="fas fa-star-half-alt text-warning"></i>
                                }
                                else
                                {
                                    <i class="far fa-star text-warning"></i>
                                }
                            }
                            <span class="ms-1">@game.Rating.ToString("0.0")</span>
                        </div>

                        <!-- Botones -->
                        <a asp-action="Detalles" asp-route-id="@game.Id" class="btn btn-primary w-100 mb-2">Ver detalles</a>
                        
                        <div class="d-flex justify-content-between">
                            <a asp-action="AddToLibrary" asp-route-id="@game.Id" class="btn btn-success w-48">Añadir a biblioteca</a>
                            <a href="#" class="btn" style="background-color: #B62DCE; color: white; width: 48%;">Comprar juego</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Paginación - SOLO 5 PÁGINAS MÁXIMO -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <!-- Botón Anterior -->
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { 
                            genre = Model.SelectedGenre, 
                            platform = Model.SelectedPlatform, 
                            page = Model.CurrentPage - 1 
                        })">Anterior</a>
                    </li>
                }
                
                <!-- SOLO 5 páginas máximo -->
                @for (int i = 1; i <= Math.Min(5, Model.TotalPages); i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { 
                            genre = Model.SelectedGenre, 
                            platform = Model.SelectedPlatform, 
                            page = i 
                        })">@i</a>
                    </li>
                }

                <!-- Botón Siguiente -->
                @if (Model.CurrentPage < 5 && Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { 
                            genre = Model.SelectedGenre, 
                            platform = Model.SelectedPlatform, 
                            page = Model.CurrentPage + 1 
                        })">Siguiente</a>
                    </li>
                }
            </ul>
        </nav>
    }
}
else
{
    <div class="alert alert-info text-center">
        <h4>No se encontraron juegos</h4>
        <p>Intenta con otros criterios de búsqueda</p>
        <a asp-action="Index" class="btn btn-primary">Ver todos los juegos</a>
    </div>
}

@section Styles {
    <style>
        .game-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: none;
            border-radius: 15px;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            color: white;
        }
        
        .game-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }
        
        .game-rating {
            font-size: 1.1rem;
        }
        
        .filter-section {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }

        .w-48 {
            width: 48% !important;
        }

        /* Estilo para el botón de buscar más grande */
        .btn-primary {
            height: 42px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>
}