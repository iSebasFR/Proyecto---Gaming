@model Proyecto_Gaming.ViewModels.DetalleGrupoViewModel
@{
    ViewData["Title"] = Model.Grupo?.Nombre;
}

<!-- Navbar Secundaria para Comunidad -->
<nav class="navbar navbar-expand-lg comunidad-navbar mb-4">
    <div class="container">
        <div class="navbar-nav">
            <a class="nav-link" asp-controller="Comunidad" asp-action="Index">
                <i class="fas fa-home me-2"></i>Feed
            </a>
            <a class="nav-link" asp-controller="Amigos" asp-action="Index">
                <i class="fas fa-user-friends me-2"></i>Amigos
            </a>
            <a class="nav-link active" asp-controller="Grupos" asp-action="Index">
                <i class="fas fa-users me-2"></i>Grupos
            </a>
        </div>
    </div>
</nav>

<div class="row">
    <!-- Sidebar con Mis Grupos -->
    <div class="col-md-3">
        <div class="sidebar-comunidad mb-4">
            <h5 class="mb-3">Mis Grupos</h5>
            
            @if (!Model.MisGrupos.Any())
            {
                <div class="text-center py-3">
                    <i class="fas fa-users fa-2x text-muted mb-2"></i>
                    <p class="text-white small">No perteneces a ningún grupo</p> <!-- Cambiado a text-white -->
                </div>
            }
            else
            {
                foreach (var grupo in Model.MisGrupos)
                {
                    <a asp-action="Detalle" asp-route-id="@grupo.Id" 
                       class="sidebar-link @(grupo.Id == Model.Grupo?.Id ? "active" : "")">
                        <div class="d-flex align-items-center">
                            @if (!string.IsNullOrEmpty(grupo.FotoGrupo))
                            {
                                <img src="@grupo.FotoGrupo" class="rounded-circle me-2" width="40" height="40" alt="Foto Grupo">
                            }
                            else
                            {
                                <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center text-white fw-bold me-2" style="width: 40px; height: 40px;">
                                    @{
                                        var inicial = !string.IsNullOrEmpty(grupo.Nombre) ? grupo.Nombre[0].ToString().ToUpper() : "G";
                                    }
                                    @inicial
                                </div>
                            }
                            <div>
                                <strong class="d-block text-white">@grupo.Nombre</strong> <!-- Cambiado a text-white -->
                                <small class="text-white">@grupo.Miembros?.Count miembros</small> <!-- Cambiado a text-white -->
                            </div>
                        </div>
                    </a>
                }
            }
            
            <hr>
            <a class="sidebar-link text-success" asp-action="Crear">
                <i class="fas fa-plus me-2"></i>Crear Nuevo Grupo
            </a>
        </div>
    </div>

    <!-- Contenido Principal del Grupo -->
    <div class="col-md-9">
        <!-- Header del Grupo -->
        <div class="stats-card mb-4">
            <div class="row align-items-center">
                <div class="col-auto">
                    @if (!string.IsNullOrEmpty(Model.Grupo?.FotoGrupo))
                    {
                        <img src="@Model.Grupo.FotoGrupo" class="rounded-circle" width="80" height="80" alt="Foto Grupo">
                    }
                    else
                    {
                        <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center text-white fw-bold" style="width: 80px; height: 80px;">
                            @{
                                var inicial = !string.IsNullOrEmpty(Model.Grupo?.Nombre) ? Model.Grupo.Nombre[0].ToString().ToUpper() : "G";
                            }
                            @inicial
                        </div>
                    }
                </div>
                <div class="col">
                    <h2 class="mb-1 text-white">@Model.Grupo?.Nombre</h2> <!-- Cambiado a text-white -->
                    <p class="text-white mb-2">@Model.Grupo?.Descripcion</p> <!-- Cambiado a text-white -->
                    <div class="d-flex align-items-center gap-3">
                        <span class="badge bg-primary">@Model.Grupo?.Categoria</span>
                        <small class="text-white"> <!-- Cambiado a text-white -->
                            <i class="fas fa-users me-1"></i>@Model.Miembros.Count miembros
                        </small>
                        <small class="text-white"> <!-- Cambiado a text-white -->
                            <i class="fas fa-calendar me-1"></i>Creado el @Model.Grupo?.FechaCreacion.ToString("dd/MM/yyyy")
                        </small>
                    </div>
                </div>
                <div class="col-auto">
                    @if (!Model.EsMiembro)
                    {
                        <button class="btn btn-primary" onclick="unirseGrupo(@Model.Grupo?.Id)">
                            <i class="fas fa-plus me-1"></i>Unirse al Grupo
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-success" disabled>
                            <i class="fas fa-check me-1"></i>Ya eres miembro
                        </button>

                        <!-- NUEVO: Botón para salir del grupo -->
                        @if (!Model.EsAdministrador)
                        {
                            <button class="btn btn-outline-danger" onclick="salirDelGrupo(@Model.Grupo?.Id, '@Model.Grupo?.Nombre')">
                                <i class="fas fa-sign-out-alt me-1"></i>Salir del Grupo
                            </button>
                        }
                    }
                    @if (Model.EsAdministrador)
                    {
                        <a asp-action="Configuracion" asp-route-id="@Model.Grupo?.Id" class="btn btn-outline-warning">
                            <i class="fas fa-cog me-1"></i>Configuración
                        </a>
                    }
                </div>
            </div>
        </div>

        <!-- Navegación del Grupo -->
        <div class="stats-card mb-4">
            <div class="grupo-navigation">
                <button class="nav-btn @(ViewBag.SeccionActiva == "miembros" ? "active" : "")" onclick="mostrarSeccion('miembros')">
                    <i class="fas fa-users me-2"></i>Miembros
                </button>
                <button class="nav-btn @(ViewBag.SeccionActiva == "multimedia" ? "active" : "")" onclick="mostrarSeccion('multimedia')">
                    <i class="fas fa-images me-2"></i>Multimedia
                </button>
            </div>
        </div>

        <!-- Contenido de Miembros -->
        <div id="seccion-miembros" class="seccion-contenido @(ViewBag.SeccionActiva != "multimedia" ? "d-block" : "d-none")">
            <div class="stats-card">
                <h4 class="mb-4 text-white">Miembros del Grupo (@Model.Miembros.Count)</h4> <!-- Cambiado a text-white -->
                
                @if (!Model.Miembros.Any())
                {
                    <div class="text-center py-4">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h5 class="text-white">No hay miembros en el grupo</h5> <!-- Cambiado a text-white -->
                    </div>
                }
                else
                {
                    <div class="row">
                        @foreach (var miembro in Model.Miembros)
                        {
                            <div class="col-md-6 col-lg-4 mb-3">
                                <div class="miembro-card p-3">
                                    <div class="d-flex align-items-center mb-3">
                                        @if (!string.IsNullOrEmpty(miembro.Usuario?.FotoPerfil))
                                        {
                                            <img src="@miembro.Usuario.FotoPerfil" class="rounded-circle me-3" width="60" height="60" alt="Foto">
                                        }
                                        else
                                        {
                                            <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center text-white fw-bold me-3" style="width: 60px; height: 60px;">
                                                @{
                                                    var inicial = !string.IsNullOrEmpty(miembro.Usuario?.UserName) ? miembro.Usuario.UserName[0].ToString().ToUpper() : "U";
                                                }
                                                @inicial
                                            </div>
                                        }
                                        <div>
                                            <h6 class="mb-1 text-white">@miembro.Usuario?.DisplayName</h6> <!-- Cambiado a text-white -->
                                            <small class="text-white">@@@miembro.Usuario?.UserName</small> <!-- Cambiado a text-white -->
                                            <br>
                                            <span class="badge bg-secondary">@miembro.Rol</span>
                                        </div>
                                    </div>
                                    
                                    <div class="btn-group w-100">
                                        <a asp-controller="Perfil" asp-action="Index" asp-route-userId="@miembro.Usuario?.Id" 
                                           class="btn btn-outline-primary btn-sm">
                                            <i class="fas fa-eye me-1"></i>Ver Perfil
                                        </a>
                                        @if (miembro.Usuario?.Id != ViewBag.UsuarioActualId)
                                        {
                                            <button class="btn btn-outline-success btn-sm" onclick="agregarAmigo('@miembro.Usuario?.Id')">
                                                <i class="fas fa-user-plus me-1"></i>Añadir Amigo
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>

        <!-- Reemplazar la sección Multimedia existente con esta versión mejorada -->
        <div id="seccion-multimedia" class="seccion-contenido @(ViewBag.SeccionActiva == "multimedia" ? "d-block" : "d-none")">
            <div class="stats-card">
                <h4 class="mb-4 text-white">Multimedia del Grupo</h4> <!-- Cambiado a text-white -->
                
                @if (Model.EsMiembro)
                {
                    <!-- Formulario para subir multimedia -->
                    <div class="mb-4 p-4" style="background: rgba(255,255,255,0.05); border-radius: var(--border-radius);">
                        <h5 class="mb-3 text-white"><i class="fas fa-upload me-2"></i>Subir Multimedia</h5> <!-- Cambiado a text-white -->
                        <form id="formMultimedia" enctype="multipart/form-data">
                            <input type="hidden" name="GrupoId" value="@Model.Grupo?.Id" />
                            
                            <div class="mb-3">
                                <label class="form-label text-white">Seleccionar archivo (imagen)</label> <!-- Cambiado a text-white -->
                                <input type="file" name="Archivo" class="form-control" accept="image/*" required>
                            </div>
                            
                            <div class="mb-3">
                                <label class="form-label text-white">Descripción (opcional)</label> <!-- Cambiado a text-white -->
                                <textarea name="Descripcion" class="form-control" rows="2" placeholder="Añade una descripción..."></textarea>
                            </div>
                            
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-upload me-1"></i>Subir Multimedia
                            </button>
                        </form>
                    </div>
                }

                <!-- Galería de Multimedia -->
                <div id="galeria-multimedia">
                    @if (!Model.Multimedia.Any())
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-images fa-3x text-muted mb-3"></i>
                            <h5 class="text-white">No hay multimedia en el grupo</h5> <!-- Cambiado a text-white -->
                            @if (Model.EsMiembro)
                            {
                                <p class="text-white">Sé el primero en compartir una imagen</p> <!-- Cambiado a text-white -->
                            }
                        </div>
                    }
                    else
                    {
                        <div class="row" id="contenedor-multimedia">
                            @foreach (var item in Model.Multimedia)
                            {
                                <div class="col-md-6 col-lg-4 mb-4" id="multimedia-@item.Id">
                                    <div class="multimedia-card">
                                        <!-- Imagen -->
                                        <div class="multimedia-imagen">
                                            <img src="@item.UrlArchivo" class="img-fluid" alt="@item.Descripcion" 
                                                style="width: 100%; height: 200px; object-fit: cover; border-radius: 8px 8px 0 0;">
                                        </div>
                                        
                                        <!-- Información -->
                                        <div class="multimedia-info p-3">
                                            <div class="d-flex align-items-center mb-2">
                                                @if (!string.IsNullOrEmpty(item.Usuario?.FotoPerfil))
                                                {
                                                    <img src="@item.Usuario.FotoPerfil" class="rounded-circle me-2" width="30" height="30" alt="Foto">
                                                }
                                                else
                                                {
                                                    <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center text-white fw-bold me-2" style="width: 30px; height: 30px;">
                                                        @{
                                                            var inicial = !string.IsNullOrEmpty(item.Usuario?.UserName) ? item.Usuario.UserName[0].ToString().ToUpper() : "U";
                                                        }
                                                        @inicial
                                                    </div>
                                                }
                                                <small class="text-white">@item.Usuario?.DisplayName</small> <!-- Cambiado a text-white -->
                                                <small class="text-white ms-auto">@item.FechaSubida.ToString("dd/MM/yyyy")</small> <!-- Cambiado a text-white -->
                                            </div>
                                            
                                            @if (!string.IsNullOrEmpty(item.Descripcion))
                                            {
                                                <p class="multimedia-descripcion mb-2 text-white">@item.Descripcion</p> <!-- Cambiado a text-white -->
                                            }
                                            
                                            <!-- Reacciones -->
                                            <div class="reacciones mb-2">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div class="reacciones-contadores">
                                                        @if (item.Likes > 0)
                                                        {
                                                            <span class="badge bg-primary me-1">👍 @item.Likes</span>
                                                        }
                                                        @if (item.Love > 0)
                                                        {
                                                            <span class="badge bg-danger me-1">❤️ @item.Love</span>
                                                        }
                                                        @if (item.Wow > 0)
                                                        {
                                                            <span class="badge bg-warning me-1">😮 @item.Wow</span>
                                                        }
                                                        @if (item.Sad > 0)
                                                        {
                                                            <span class="badge bg-info me-1">😢 @item.Sad</span>
                                                        }
                                                        @if (item.Angry > 0)
                                                        {
                                                            <span class="badge bg-dark me-1">😠 @item.Angry</span>
                                                        }
                                                    </div>
                                                    <small class="text-white">@item.Comentarios?.Count comentarios</small> <!-- Cambiado a text-white -->
                                                </div>
                                            </div>
                                            
                                            <!-- Botones de interacción -->
                                            <div class="botones-interaccion">
                                                <div class="btn-group w-100" role="group">
                                                    <button type="button" class="btn btn-sm btn-outline-primary reaccion-btn" 
                                                            data-multimedia-id="@item.Id" data-reaccion="like">
                                                        <i class="fas fa-thumbs-up"></i> Me gusta
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-primary dropdown-toggle" 
                                                            data-bs-toggle="dropdown" aria-expanded="false">
                                                        <i class="fas fa-smile"></i>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><button class="dropdown-item reaccion-btn" data-multimedia-id="@item.Id" data-reaccion="like">👍 Me gusta</button></li>
                                                        <li><button class="dropdown-item reaccion-btn" data-multimedia-id="@item.Id" data-reaccion="love">❤️ Me encanta</button></li>
                                                        <li><button class="dropdown-item reaccion-btn" data-multimedia-id="@item.Id" data-reaccion="wow">😮 Wow</button></li>
                                                        <li><button class="dropdown-item reaccion-btn" data-multimedia-id="@item.Id" data-reaccion="sad">😢 Triste</button></li>
                                                        <li><button class="dropdown-item reaccion-btn" data-multimedia-id="@item.Id" data-reaccion="angry">😠 Enfadado</button></li>
                                                    </ul>
                                                    <button type="button" class="btn btn-sm btn-outline-secondary comentario-btn" 
                                                            data-multimedia-id="@item.Id">
                                                        <i class="fas fa-comment"></i> Comentar
                                                    </button>
                                                </div>
                                            </div>
                                            
                                            <!-- Sección de comentarios (inicialmente oculta) -->
                                            <div class="comentarios-section mt-3 d-none" id="comentarios-@item.Id">
                                                <div class="comentarios-lista mb-2" id="lista-comentarios-@item.Id">
                                                    @if (item.Comentarios?.Any() == true)
                                                    {
                                                        foreach (var comentario in item.Comentarios.OrderBy(c => c.FechaComentario))
                                                        {
                                                            <div class="comentario-item mb-2 p-2" style="background: rgba(255,255,255,0.05); border-radius: 5px;">
                                                                <div class="d-flex align-items-center mb-1">
                                                                    @if (!string.IsNullOrEmpty(comentario.Usuario?.FotoPerfil))
                                                                    {
                                                                        <img src="@comentario.Usuario.FotoPerfil" class="rounded-circle me-2" width="20" height="20" alt="Foto">
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center text-white fw-bold me-2" style="width: 20px; height: 20px; font-size: 0.7rem;">
                                                                            @{
                                                                                var inicial = !string.IsNullOrEmpty(comentario.Usuario?.UserName) ? comentario.Usuario.UserName[0].ToString().ToUpper() : "U";
                                                                            }
                                                                            @inicial
                                                                        </div>
                                                                    }
                                                                    <strong class="small text-white">@comentario.Usuario?.DisplayName</strong> <!-- Cambiado a text-white -->
                                                                    <small class="text-white ms-2">@comentario.FechaComentario.ToString("dd/MM/yyyy HH:mm")</small> <!-- Cambiado a text-white -->
                                                                </div>
                                                                <p class="small mb-0 text-white">@comentario.Contenido</p> <!-- Cambiado a text-white -->
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                                
                                                @if (Model.EsMiembro)
                                                {
                                                    <div class="nuevo-comentario">
                                                        <div class="input-group">
                                                            <input type="text" class="form-control form-control-sm" 
                                                                placeholder="Escribe un comentario..." id="input-comentario-@item.Id">
                                                            <button class="btn btn-primary btn-sm" type="button" 
                                                                    onclick="agregarComentario(@item.Id)">
                                                                <i class="fas fa-paper-plane"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>

                <style>
                    .multimedia-card {
                        background: var(--card-bg);
                        border-radius: 8px;
                        border: 1px solid rgba(108, 92, 231, 0.2);
                        transition: all 0.3s ease;
                    }

                    .multimedia-card:hover {
                        transform: translateY(-2px);
                        border-color: var(--primary);
                    }

                    .multimedia-descripcion {
                        font-size: 0.9rem;
                        color: white; /* Cambiado a blanco */
                    }

                    .reacciones-contadores .badge {
                        font-size: 0.7rem;
                    }

                    .botones-interaccion .btn-group {
                        border-radius: 6px;
                    }

                    .comentario-item {
                        font-size: 0.85rem;
                    }

                    .dropdown-menu {
                        background: rgba(35, 40, 48, 0.95);
                        border: 1px solid var(--primary);
                    }

                    .dropdown-item {
                        color: rgba(255, 255, 255, 0.8);
                    }

                    .dropdown-item:hover {
                        background: rgba(108, 92, 231, 0.2);
                        color: var(--primary);
                    }
                </style>
            </div>
        </div>
    </div>
</div>

<style>
    /* PALETA DE COLORES GAMING - CONSISTENTE */
    :root {
        --bg-dark: #070714;
        --bg-primary: #0f0f1f;
        --card-bg: #151530;
        --accent-purple: #8b2ce6;
        --accent-blue: #2c5be6;
        --neon-purple: #b042ff;
        --neon-blue: #428bff;
        --text-primary: #ffffff;
        --text-secondary: #b8b8d0;
        --navbar-bg: rgba(15, 15, 31, 0.95);
        --success: #06d6a0;
        --warning: #ff9e1a;
        --danger: #dc3545;
        --border-radius-sm: 8px;
        --border-radius-md: 12px;
        --border-radius-lg: 15px;
    }

    /* CONTENEDOR PRINCIPAL */
    body {
        background: var(--bg-dark);
        color: var(--text-primary);
        min-height: 100vh;
        padding: 2rem 0;
    }

    /* NAVBAR SECUNDARIA - DISEÑO CUADRANGULAR IDÉNTICO */
    .comunidad-navbar {
        background: linear-gradient(135deg, var(--accent-purple), var(--neon-purple)) !important;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.3);
        height: 60px;
        padding: 8px 0;
        max-width: 500px;
        margin: 80px auto 2rem auto; /* Aumentado margen superior para bajar la navbar */
        border: 1px solid rgba(139, 44, 230, 0.4);
        backdrop-filter: blur(10px);
        position: relative;
        overflow: hidden;
    }

    .comunidad-navbar::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 3px;
        background: linear-gradient(90deg, var(--neon-blue), var(--neon-purple), var(--accent-blue));
        background-size: 200% 100%;
    }

    .comunidad-navbar .navbar-nav {
        gap: 8px;
    }

    .comunidad-navbar .nav-link {
        color: var(--text-primary) !important;
        font-weight: 700;
        padding: 12px 24px !important;
        border-radius: 8px;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.9rem;
        position: relative;
        overflow: hidden;
        border: 2px solid transparent;
    }

    .comunidad-navbar .nav-link::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .comunidad-navbar .nav-link:hover::before {
        left: 100%;
    }

    .comunidad-navbar .nav-link:hover {
        background: rgba(255, 255, 255, 0.15);
        border-color: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(255, 255, 255, 0.1);
    }

    .comunidad-navbar .nav-link.active {
        background: rgba(255, 255, 255, 0.2);
        border: 2px solid var(--neon-blue);
        box-shadow: 0 0 20px rgba(66, 139, 255, 0.4);
        font-weight: 800;
    }

    /* SIDEBAR STICKY - MÁS CORTO Y MOVIBLE */
    .sidebar-comunidad {
        background: var(--card-bg) !important;
        border: 1px solid rgba(139, 44, 230, 0.3) !important;
        border-radius: var(--border-radius-lg);
        padding: 1.5rem;
        backdrop-filter: blur(10px);
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.1);
        position: sticky;
        top: 140px; /* Posicionado más abajo */
        height: auto; /* Altura automática */
        max-height: 500px; /* Altura máxima más corta */
        overflow-y: auto; /* Scroll interno si es necesario */
        z-index: 1000;
        margin-top: 20px; /* Espacio adicional arriba */
    }

    .sidebar-comunidad h5 {
        color: var(--text-primary);
        font-weight: 700;
        font-size: 1.1rem;
        background: linear-gradient(135deg, var(--text-primary), var(--neon-purple));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 1.5rem;
    }

    .sidebar-link {
        display: block;
        padding: 1rem 1.25rem;
        color: var(--text-secondary);
        text-decoration: none;
        border-radius: var(--border-radius-md);
        margin-bottom: 0.75rem;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        border: 1px solid transparent;
    }

    .sidebar-link::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 3px;
        background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));
        transform: scaleY(0);
        transition: transform 0.3s ease;
    }

    .sidebar-link:hover {
        background: rgba(139, 44, 230, 0.1);
        color: var(--text-primary);
        border-color: rgba(139, 44, 230, 0.2);
        transform: translateX(5px);
    }

    .sidebar-link.active {
        background: rgba(139, 44, 230, 0.15);
        color: var(--text-primary);
        border-color: rgba(139, 44, 230, 0.3);
    }

    .sidebar-link.active::before {
        transform: scaleY(1);
    }

    .sidebar-link.text-success {
        background: rgba(6, 214, 160, 0.1);
        border: 1px solid rgba(6, 214, 160, 0.3) !important;
    }

    .sidebar-link.text-success:hover {
        background: rgba(6, 214, 160, 0.2) !important;
        border-color: var(--success) !important;
    }

    .sidebar-comunidad hr {
        background: linear-gradient(90deg, transparent, rgba(139, 44, 230, 0.5), transparent);
        height: 1px;
        border: none;
        margin: 1.5rem 0;
    }

    /* CONTENIDO PRINCIPAL - AJUSTADO */
    .col-md-9 {
        margin-top: 20px; /* Espacio superior para bajar el contenido */
    }

    /* TARJETAS PRINCIPALES - MÁS ABAJO */
    .stats-card {
        background: var(--card-bg) !important;
        border: 1px solid rgba(139, 44, 230, 0.3) !important;
        border-radius: var(--border-radius-lg);
        padding: 2rem;
        backdrop-filter: blur(10px);
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.1);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        margin-top: 10px; /* Espacio adicional arriba */
    }

    .stats-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .stats-card:hover {
        border-color: var(--neon-purple);
        box-shadow: 0 12px 35px rgba(139, 44, 230, 0.2);
    }

    .stats-card:hover::before {
        opacity: 1;
    }

    /* HEADER DEL GRUPO */
    .stats-card .rounded-circle {
        border: 3px solid var(--neon-purple);
        box-shadow: 0 0 20px rgba(139, 44, 230, 0.4);
        transition: all 0.3s ease;
    }

    .stats-card .rounded-circle:hover {
        transform: scale(1.05);
        box-shadow: 0 0 30px rgba(139, 44, 230, 0.6);
    }

    .stats-card h2 {
        color: var(--text-primary);
        font-weight: 800;
        font-size: 2.25rem;
        background: linear-gradient(135deg, var(--text-primary), var(--neon-purple));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 0.5rem;
    }

    .stats-card p {
        color: var(--text-secondary);
        font-size: 1.1rem;
        line-height: 1.5;
        margin-bottom: 1rem;
    }

    /* BADGES MEJORADOS */
    .badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 700;
        font-size: 0.8rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .bg-primary {
        background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue)) !important;
        color: var(--text-primary);
    }

    .bg-secondary {
        background: linear-gradient(135deg, var(--text-secondary), #8a8aa8) !important;
        color: var(--text-primary);
    }

    /* BOTONES MEJORADOS */
    .btn {
        border-radius: var(--border-radius-sm);
        font-weight: 600;
        padding: 0.75rem 1.5rem;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .btn:hover::before {
        left: 100%;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));
        border: none;
        color: var(--text-primary);
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.4);
    }

    .btn-success {
        background: linear-gradient(135deg, var(--success), #05b384);
        border: none;
        color: var(--text-primary);
    }

    .btn-success:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(6, 214, 160, 0.4);
    }

    .btn-outline-danger {
        background: transparent;
        border: 2px solid var(--danger);
        color: var(--danger);
    }

    .btn-outline-danger:hover {
        background: var(--danger);
        color: var(--text-primary);
        transform: translateY(-2px);
    }

    .btn-outline-warning {
        background: transparent;
        border: 2px solid var(--warning);
        color: var(--warning);
    }

    .btn-outline-warning:hover {
        background: var(--warning);
        color: var(--text-primary);
        transform: translateY(-2px);
    }

    /* NAVEGACIÓN DEL GRUPO */
    .grupo-navigation {
        display: flex;
        gap: 1rem;
    }

    .nav-btn {
        background: transparent;
        border: 2px solid rgba(139, 44, 230, 0.3);
        color: var(--text-secondary);
        padding: 1rem 1.5rem;
        border-radius: var(--border-radius-md);
        font-weight: 600;
        transition: all 0.3s ease;
        flex: 1;
        position: relative;
        overflow: hidden;
    }

    .nav-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
        transition: left 0.5s;
    }

    .nav-btn:hover::before {
        left: 100%;
    }

    .nav-btn:hover,
    .nav-btn.active {
        background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));
        color: var(--text-primary);
        border-color: var(--neon-purple);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(139, 44, 230, 0.3);
    }

    /* TARJETAS DE MIEMBROS */
    .miembro-card {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(139, 44, 230, 0.2);
        border-radius: var(--border-radius-md);
        padding: 1.5rem;
        transition: all 0.3s ease;
        height: 100%;
    }

    .miembro-card:hover {
        background: rgba(139, 44, 230, 0.1);
        border-color: var(--neon-purple);
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.2);
    }

    .miembro-card .rounded-circle {
        border: 2px solid var(--neon-purple);
        transition: all 0.3s ease;
    }

    .miembro-card:hover .rounded-circle {
        transform: scale(1.1);
        box-shadow: 0 0 15px rgba(139, 44, 230, 0.4);
    }

    .miembro-card h6 {
        color: var(--text-primary);
        font-weight: 700;
        margin-bottom: 0.25rem;
    }

    .miembro-card small {
        color: var(--text-secondary);
        font-size: 0.85rem;
    }

    /* BOTONES EN TARJETAS DE MIEMBROS */
    .btn-group .btn {
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
    }

    .btn-outline-primary {
        background: transparent;
        border: 1px solid var(--accent-purple);
        color: var(--accent-purple);
    }

    .btn-outline-primary:hover {
        background: var(--accent-purple);
        color: var(--text-primary);
    }

    .btn-outline-success {
        background: transparent;
        border: 1px solid var(--success);
        color: var(--success);
    }

    .btn-outline-success:hover {
        background: var(--success);
        color: var(--text-primary);
    }

    /* SECCIÓN MULTIMEDIA */
    .multimedia-card {
        background: var(--card-bg);
        border: 1px solid rgba(139, 44, 230, 0.3);
        border-radius: var(--border-radius-md);
        transition: all 0.3s ease;
        overflow: hidden;
        height: 100%;
    }

    .multimedia-card:hover {
        transform: translateY(-5px);
        border-color: var(--neon-purple);
        box-shadow: 0 10px 30px rgba(139, 44, 230, 0.25);
    }

    .multimedia-imagen img {
        transition: transform 0.3s ease;
    }

    .multimedia-card:hover .multimedia-imagen img {
        transform: scale(1.05);
    }

    .multimedia-info {
        background: var(--bg-primary);
    }

    .multimedia-descripcion {
        color: var(--text-secondary);
        font-size: 0.9rem;
        line-height: 1.4;
    }

    /* FORMULARIO DE MULTIMEDIA */
    .form-control {
        background: var(--bg-primary);
        border: 1px solid rgba(139, 44, 230, 0.3);
        border-radius: var(--border-radius-sm);
        color: var(--text-primary);
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        background: var(--card-bg);
        border-color: var(--neon-purple);
        box-shadow: 0 0 0 2px rgba(139, 44, 230, 0.2);
        color: var(--text-primary);
    }

    .form-label {
        color: var(--text-primary);
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    /* REACCIONES Y COMENTARIOS */
    .reacciones-contadores .badge {
        font-size: 0.7rem;
        margin-right: 0.25rem;
    }

    .botones-interaccion .btn-group {
        border-radius: var(--border-radius-sm);
        overflow: hidden;
    }

    .comentario-item {
        background: rgba(255, 255, 255, 0.05);
        border-radius: var(--border-radius-sm);
        padding: 0.75rem;
        margin-bottom: 0.5rem;
    }

    .dropdown-menu {
        background: var(--card-bg);
        border: 1px solid rgba(139, 44, 230, 0.3);
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.2);
    }

    .dropdown-item {
        color: var(--text-secondary);
        padding: 0.5rem 1rem;
        transition: all 0.3s ease;
    }

    .dropdown-item:hover {
        background: rgba(139, 44, 230, 0.1);
        color: var(--text-primary);
    }

    /* ESTADOS VACÍOS */
    .text-center.py-4 {
        background: rgba(255, 255, 255, 0.05);
        border: 2px dashed rgba(139, 44, 230, 0.3);
        border-radius: var(--border-radius-lg);
        padding: 3rem 2rem !important;
    }

    .text-center.py-4 .fa-users,
    .text-center.py-4 .fa-images {
        color: var(--text-secondary);
        opacity: 0.5;
    }

    .text-center.py-4 h5 {
        color: var(--text-primary);
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .text-center.py-4 p {
        color: var(--text-secondary);
        margin-bottom: 0;
    }

    /* SCROLLBAR PERSONALIZADO PARA SIDEBAR */
    .sidebar-comunidad::-webkit-scrollbar {
        width: 6px;
    }

    .sidebar-comunidad::-webkit-scrollbar-track {
        background: var(--bg-primary);
        border-radius: 3px;
    }

    .sidebar-comunidad::-webkit-scrollbar-thumb {
        background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));
        border-radius: 3px;
    }

    .sidebar-comunidad::-webkit-scrollbar-thumb:hover {
        background: linear-gradient(135deg, var(--neon-purple), var(--neon-blue));
    }

    /* TÍTULOS DE SECCIÓN */
    h3.mb-4, h4.mb-4 {
        color: var(--text-primary);
        font-weight: 700;
        font-size: 1.75rem;
        background: linear-gradient(135deg, var(--text-primary), var(--neon-purple));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* TEXTOS PEQUEÑOS */
    small.text-white {
        color: var(--text-secondary) !important;
    }

    /* GARANTIZAR COLORES DE TEXTO */
    .text-white {
        color: var(--text-primary) !important;
    }

    .text-muted {
        color: var(--text-secondary) !important;
    }
</style>

@section Scripts {
    <script>
        // Mostrar/ocultar secciones
        function mostrarSeccion(seccion) {
            // Ocultar todas las secciones
            document.querySelectorAll('.seccion-contenido').forEach(sec => {
                sec.classList.add('d-none');
                sec.classList.remove('d-block');
            });
            
            // Mostrar la sección seleccionada
            document.getElementById('seccion-' + seccion).classList.remove('d-none');
            document.getElementById('seccion-' + seccion).classList.add('d-block');
            
            // Actualizar botones activos
            document.querySelectorAll('.nav-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
            
            // Actualizar URL sin recargar
            const url = new URL(window.location);
            url.searchParams.set('seccion', seccion);
            window.history.replaceState({}, '', url);
        }

        // Cargar sección desde URL
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const seccion = urlParams.get('seccion');
            if (seccion) {
                mostrarSeccion(seccion);
            }
        });

        async function publicarEnGrupo() {
            const contenido = document.getElementById('nuevaPublicacion').value;
            if (!contenido.trim()) {
                alert('Por favor escribe algo para publicar');
                return;
            }

            try {
                const response = await fetch('/Grupos/Publicar', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        grupoId: @Model.Grupo?.Id,
                        contenido: contenido
                    })
                });
                
                const result = await response.json();
                alert(result.message);
                if (result.success) {
                    location.reload();
                }
            } catch (error) {
                alert('Error al publicar');
            }
        }

        async function unirseGrupo(grupoId) {
            try {
                const response = await fetch('/Grupos/Unirse', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ grupoId: grupoId })
                });
                
                const result = await response.json();
                alert(result.message);
                if (result.success) {
                    location.reload();
                }
            } catch (error) {
                alert('Error al unirse al grupo: ' + error.message);
            }
        }

        async function agregarAmigo(usuarioId) {
            try {
                const response = await fetch('/Amigos/EnviarSolicitud', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ amigoId: usuarioId })
                });
                
                const result = await response.json();
                alert(result.message);
            } catch (error) {
                alert('Error al enviar solicitud: ' + error.message);
            }
        }

        // Agregar esta función en el section Scripts de Detalle.cshtml
        async function salirDelGrupo(grupoId, nombreGrupo) {
            if (confirm(`¿Estás seguro de que quieres salir del grupo "${nombreGrupo}"?`)) {
                try {
                    const response = await fetch('/Grupos/SalirDelGrupo', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ grupoId: grupoId })
                    });
                    
                    const result = await response.json();
                    alert(result.message);
                    if (result.success) {
                        window.location.href = '/Grupos';
                    }
                } catch (error) {
                    alert('Error al salir del grupo: ' + error.message);
                }
            }
        }

        // Subir multimedia
        document.getElementById('formMultimedia').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            
            try {
                const response = await fetch('/Grupos/SubirMultimedia', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                if (result.success) {
                    alert('Multimedia subida correctamente');
                    this.reset();
                    location.reload();
                } else {
                    alert('Error: ' + result.message);
                }
            } catch (error) {
                alert('Error al subir multimedia: ' + error.message);
            }
        });

        // Reacciones
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('reaccion-btn')) {
                const multimediaId = e.target.getAttribute('data-multimedia-id');
                const reaccion = e.target.getAttribute('data-reaccion');
                reaccionarMultimedia(multimediaId, reaccion);
            }
        });

        async function reaccionarMultimedia(multimediaId, tipoReaccion) {
            try {
                const response = await fetch('/Grupos/ReaccionarMultimedia', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        multimediaId: parseInt(multimediaId),
                        tipoReaccion: tipoReaccion
                    })
                });
                
                const result = await response.json();
                if (result.success) {
                    // Actualizar contadores visualmente
                    const contenedor = document.querySelector(`#multimedia-${multimediaId} .reacciones-contadores`);
                    if (contenedor) {
                        // En una implementación real, actualizarías los contadores específicos
                        // Por simplicidad, recargamos la sección
                        location.reload();
                    }
                } else {
                    alert(result.message);
                }
            } catch (error) {
                alert('Error al reaccionar: ' + error.message);
            }
        }

        // Mostrar/ocultar comentarios
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('comentario-btn')) {
                const multimediaId = e.target.getAttribute('data-multimedia-id');
                const seccionComentarios = document.getElementById(`comentarios-${multimediaId}`);
                seccionComentarios.classList.toggle('d-none');
            }
        });

        // Agregar comentario
        async function agregarComentario(multimediaId) {
            const input = document.getElementById(`input-comentario-${multimediaId}`);
            const contenido = input.value.trim();
            
            if (!contenido) {
                alert('Por favor escribe un comentario');
                return;
            }
            
            try {
                const response = await fetch('/Grupos/AgregarComentarioMultimedia', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        multimediaId: multimediaId,
                        contenido: contenido
                    })
                });
                
                const result = await response.json();
                if (result.success) {
                    input.value = '';
                    // En una implementación real, agregarías el comentario a la lista
                    // Por simplicidad, recargamos
                    location.reload();
                } else {
                    alert(result.message);
                }
            } catch (error) {
                alert('Error al agregar comentario: ' + error.message);
            }
        }
    </script>
}