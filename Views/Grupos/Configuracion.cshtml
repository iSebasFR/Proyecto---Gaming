@model Proyecto_Gaming.ViewModels.ConfiguracionGrupoViewModel
@{
    ViewData["Title"] = "Configuración del Grupo";
}



<div class="row">
    <!-- Sidebar de Configuración -->
    <div class="col-md-3">
        <div class="sidebar-configuracion">
            <!-- Info del Grupo -->
            <div class="text-center mb-4 p-3" style="border-bottom: 1px solid rgba(108, 92, 231, 0.3);">
                @if (!string.IsNullOrEmpty(Model.FotoGrupoActual))
                {
                    <img src="@Model.FotoGrupoActual" class="rounded-circle mb-3" width="80" height="80" alt="Foto Grupo">
                }
                else
                {
                    <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center text-white fw-bold mx-auto mb-3" style="width: 80px; height: 80px;">
                        @{
                            var inicial = !string.IsNullOrEmpty(Model.Nombre) ? Model.Nombre[0].ToString().ToUpper() : "G";
                        }
                        @inicial
                    </div>
                }
                <h5 class="mb-1 text-white">@Model.Nombre</h5> <!-- Cambiado a text-white -->
                <small class="text-white">Configuración</small> <!-- Cambiado a text-white -->
            </div>

            <!-- Navegación -->
            <div class="config-nav">
                <a class="config-nav-link @(ViewBag.SeccionActiva == "configuracion" ? "active" : "")" 
                   href="?seccion=configuracion">
                    <i class="fas fa-cog me-2"></i>Configuración
                </a>
                <a class="config-nav-link @(ViewBag.SeccionActiva == "miembros" ? "active" : "")" 
                   href="?seccion=miembros">
                    <i class="fas fa-users me-2"></i>Miembros
                </a>
            </div>
        </div>
    </div>

    <!-- Contenido Principal -->
    <div class="col-md-9">
        <!-- Sección Configuración -->
        @if (ViewBag.SeccionActiva != "miembros")
        {
            <div class="stats-card">
                <h3 class="mb-4 text-white">Configuración del Grupo</h3> <!-- Cambiado a text-white -->
                
                <!-- Mostrar mensajes de error -->
                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>@TempData["Error"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["Ok"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle me-2"></i>@TempData["Ok"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                
                <form asp-action="ActualizarConfiguracion" method="post" enctype="multipart/form-data">
                    <input type="hidden" asp-for="GrupoId" />
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Nombre" class="form-label text-white">Nombre del Grupo *</label> <!-- Cambiado a text-white -->
                                <input asp-for="Nombre" class="form-control">
                                <span asp-validation-for="Nombre" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Categoria" class="form-label text-white">Categoría *</label> <!-- Cambiado a text-white -->
                                <select asp-for="Categoria" class="form-select">
                                    <option value="">Seleccionar categoría</option>
                                    <option value="RPG">RPG</option>
                                    <option value="Aventura">Aventura</option>
                                    <option value="Acción">Acción</option>
                                    <option value="Estrategia">Estrategia</option>
                                    <option value="Deportes">Deportes</option>
                                    <option value="Cooperativo">Cooperativo</option>
                                    <option value="Competitivo">Competitivo</option>
                                    <option value="Casual">Casual</option>
                                </select>
                                <span asp-validation-for="Categoria" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Descripcion" class="form-label text-white">Descripción</label> <!-- Cambiado a text-white -->
                        <textarea asp-for="Descripcion" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Descripcion" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="FotoGrupo" class="form-label text-white">Foto del Grupo</label> <!-- Cambiado a text-white -->
                                <input asp-for="FotoGrupo" type="file" class="form-control" accept="image/*">
                                @if (!string.IsNullOrEmpty(Model.FotoGrupoActual))
                                {
                                    <small class="text-white">Foto actual: <img src="@Model.FotoGrupoActual" width="30" height="30" class="rounded-circle ms-2"></small> <!-- Cambiado a text-white -->
                                }
                                <small class="text-white">Dejar vacío para mantener la foto actual</small> <!-- Cambiado a text-white -->
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="BannerGrupo" class="form-label text-white">Banner del Grupo</label> <!-- Cambiado a text-white -->
                                <input asp-for="BannerGrupo" type="file" class="form-control" accept="image/*">
                                @if (!string.IsNullOrEmpty(Model.BannerGrupoActual))
                                {
                                    <small class="text-white">Banner actual disponible</small> <!-- Cambiado a text-white -->
                                }
                                <small class="text-white">Dejar vacío para mantener el banner actual</small> <!-- Cambiado a text-white -->
                            </div>
                        </div>
                    </div>

                    <div class="mb-3 form-check">
                        <input asp-for="EsPublico" class="form-check-input">
                        <label asp-for="EsPublico" class="form-check-label text-white">Grupo público (cualquiera puede ver y unirse)</label> <!-- Cambiado a text-white -->
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-save me-2"></i>Guardar Cambios
                        </button>
                        <a asp-action="Detalle" asp-route-id="@Model.GrupoId" class="btn btn-secondary btn-lg ms-2">
                            <i class="fas fa-arrow-left me-2"></i>Volver al Grupo
                        </a>
                    </div>
                </form>

                <!-- Botón para eliminar grupo -->
                <div class="mt-5 pt-4 border-top">
                    <h5 class="text-danger mb-3">Zona de peligro</h5>
                    <p class="text-white mb-3">Esta acción no se puede deshacer. Se eliminará el grupo y todos sus datos permanentemente.</p> <!-- Cambiado a text-white -->
                    <button class="btn btn-danger" onclick="eliminarGrupo(@Model.GrupoId, '@Model.Nombre')">
                        <i class="fas fa-trash me-2"></i>Eliminar Grupo
                    </button>
                </div>
            </div>
        }

        <!-- Sección Miembros -->
        @if (ViewBag.SeccionActiva == "miembros")
        {
            <div class="stats-card">
                <h3 class="mb-4 text-white">Gestión de Miembros</h3> <!-- Cambiado a text-white -->
                
                @if (!Model.Miembros.Any())
                {
                    <div class="text-center py-4">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h5 class="text-white">No hay miembros en el grupo</h5> <!-- Cambiado a text-white -->
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-dark">
                            <thead>
                                <tr>
                                    <th class="text-white">Usuario</th> <!-- Cambiado a text-white -->
                                    <th class="text-white">Rol</th> <!-- Cambiado a text-white -->
                                    <th class="text-white">Fecha de Unión</th> <!-- Cambiado a text-white -->
                                    <th class="text-white">Acciones</th> <!-- Cambiado a text-white -->
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var miembro in Model.Miembros)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                @if (!string.IsNullOrEmpty(miembro.Usuario.FotoPerfil))
                                                {
                                                    <img src="@miembro.Usuario.FotoPerfil" class="rounded-circle me-2" width="40" height="40" alt="Foto">
                                                }
                                                else
                                                {
                                                    <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center text-white fw-bold me-2" style="width: 40px; height: 40px;">
                                                        @{
                                                            var inicial = !string.IsNullOrEmpty(miembro.Usuario.UserName) ? miembro.Usuario.UserName[0].ToString().ToUpper() : "U";
                                                        }
                                                        @inicial
                                                    </div>
                                                }
                                                <div>
                                                    <strong class="text-white">@miembro.Usuario.DisplayName</strong> <!-- Cambiado a text-white -->
                                                    <br>
                                                    <small class="text-white">@@@miembro.Usuario.UserName</small> <!-- Cambiado a text-white -->
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge @(miembro.Rol == "Administrador" ? "bg-warning" : "bg-secondary")">
                                                @miembro.Rol
                                            </span>
                                        </td>
                                        <td>
                                            <small class="text-white">@miembro.FechaUnion.ToString("dd/MM/yyyy")</small> <!-- Cambiado a text-white -->
                                        </td>
                                        <td>
                                            @if (miembro.Rol != "Administrador")
                                            {
                                                <button class="btn btn-danger btn-sm" onclick="expulsarMiembro('@miembro.UsuarioId', '@miembro.Usuario.DisplayName')">
                                                    <i class="fas fa-user-times me-1"></i>Expulsar
                                                </button>
                                            }
                                            else
                                            {
                                                <small class="text-white">Administrador</small> <!-- Cambiado a text-white -->
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        }
    </div>
</div>

<style>
    /* PALETA DE COLORES GAMING - CONSISTENTE */
    :root {
        --bg-dark: #070714;
        --bg-primary: #0f0f1f;
        --card-bg: #151530;
        --accent-purple: #8b2ce6;
        --accent-blue: #2c5be6;
        --neon-purple: #b042ff;
        --neon-blue: #428bff;
        --text-primary: #ffffff;
        --text-secondary: #b8b8d0;
        --navbar-bg: rgba(15, 15, 31, 0.95);
        --success: #06d6a0;
        --warning: #ff9e1a;
        --danger: #dc3545;
        --border-radius-sm: 8px;
        --border-radius-md: 12px;
        --border-radius-lg: 15px;
    }

    /* CONTENEDOR PRINCIPAL */
    body {
        background: var(--bg-dark);
        color: var(--text-primary);
    }

    /* NAVBAR SECUNDARIA - DISEÑO CUADRANGULAR */
    .comunidad-navbar.catalog-navbar {
        background: linear-gradient(135deg, var(--accent-purple), var(--neon-purple)) !important;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.3);
        height: 60px;
        padding: 8px 0;
        max-width: 500px;
        margin: 0 auto 2rem auto;
        border: 1px solid rgba(139, 44, 230, 0.4);
        backdrop-filter: blur(10px);
        position: relative;
        overflow: hidden;
    }

    .comunidad-navbar.catalog-navbar::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 3px;
        background: linear-gradient(90deg, var(--neon-blue), var(--neon-purple), var(--accent-blue));
        background-size: 200% 100%;
    }

    .comunidad-navbar .navbar-nav {
        gap: 8px;
    }

    .comunidad-navbar .nav-link {
        color: var(--text-primary) !important;
        font-weight: 700;
        padding: 12px 24px !important;
        border-radius: 8px;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.9rem;
        position: relative;
        overflow: hidden;
        border: 2px solid transparent;
    }

    .comunidad-navbar .nav-link::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .comunidad-navbar .nav-link:hover::before {
        left: 100%;
    }

    .comunidad-navbar .nav-link:hover {
        background: rgba(255, 255, 255, 0.15);
        border-color: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(255, 255, 255, 0.1);
    }

    .comunidad-navbar .nav-link.active {
        background: rgba(255, 255, 255, 0.2);
        border: 2px solid var(--neon-blue);
        box-shadow: 0 0 20px rgba(66, 139, 255, 0.4);
        font-weight: 800;
    }

    /* SIDEBAR DE CONFIGURACIÓN MEJORADO */
    .sidebar-configuracion {
        background: var(--card-bg) !important;
        border: 1px solid rgba(139, 44, 230, 0.3) !important;
        border-radius: var(--border-radius-lg);
        backdrop-filter: blur(10px);
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.1);
        overflow: hidden;
        position: sticky;
        top: 2rem;
    }

    .sidebar-configuracion .text-center {
        background: linear-gradient(135deg, rgba(139, 44, 230, 0.1), rgba(66, 139, 255, 0.1));
        padding: 2rem 1rem;
        border-bottom: 1px solid rgba(139, 44, 230, 0.3);
    }

    .sidebar-configuracion .rounded-circle {
        border: 3px solid var(--neon-purple);
        box-shadow: 0 0 20px rgba(139, 44, 230, 0.4);
        transition: all 0.3s ease;
    }

    .sidebar-configuracion .rounded-circle:hover {
        transform: scale(1.05);
        box-shadow: 0 0 30px rgba(139, 44, 230, 0.6);
    }

    .sidebar-configuracion h5 {
        color: var(--text-primary);
        font-weight: 700;
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
    }

    .sidebar-configuracion small {
        color: var(--text-secondary);
        font-size: 0.85rem;
    }

    .config-nav {
        padding: 1.5rem;
    }

    .config-nav-link {
        display: flex;
        align-items: center;
        padding: 1rem 1.25rem;
        color: var(--text-secondary);
        text-decoration: none;
        border-radius: var(--border-radius-md);
        margin-bottom: 0.5rem;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        border: 1px solid transparent;
    }

    .config-nav-link::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 3px;
        background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));
        transform: scaleY(0);
        transition: transform 0.3s ease;
    }

    .config-nav-link:hover {
        background: rgba(139, 44, 230, 0.1);
        color: var(--text-primary);
        border-color: rgba(139, 44, 230, 0.2);
        transform: translateX(5px);
    }

    .config-nav-link.active {
        background: rgba(139, 44, 230, 0.15);
        color: var(--text-primary);
        border-color: rgba(139, 44, 230, 0.3);
    }

    .config-nav-link.active::before {
        transform: scaleY(1);
    }

    .config-nav-link i {
        width: 20px;
        text-align: center;
        margin-right: 0.75rem;
        transition: all 0.3s ease;
    }

    .config-nav-link:hover i,
    .config-nav-link.active i {
        color: var(--neon-purple);
        transform: scale(1.1);
    }

    /* TARJETA DE CONTENIDO PRINCIPAL */
    .stats-card {
        background: var(--card-bg) !important;
        border: 1px solid rgba(139, 44, 230, 0.3) !important;
        border-radius: var(--border-radius-lg);
        padding: 2rem;
        backdrop-filter: blur(10px);
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.1);
        transition: all 0.3s ease;
    }

    .stats-card:hover {
        border-color: var(--neon-purple);
        box-shadow: 0 12px 35px rgba(139, 44, 230, 0.2);
    }

    .stats-card h3 {
        color: var(--text-primary);
        font-weight: 700;
        font-size: 1.75rem;
        background: linear-gradient(135deg, var(--text-primary), var(--neon-purple));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 1.5rem;
    }

    /* FORMULARIOS MEJORADOS */
    .form-label {
        color: var(--text-primary) !important;
        font-weight: 600;
        margin-bottom: 0.5rem;
        font-size: 0.95rem;
    }

    .form-control,
    .form-select {
        background: var(--bg-primary);
        border: 1px solid rgba(139, 44, 230, 0.3);
        border-radius: var(--border-radius-sm);
        color: var(--text-primary);
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
    }

    .form-control:focus,
    .form-select:focus {
        background: var(--card-bg);
        border-color: var(--neon-purple);
        box-shadow: 0 0 0 2px rgba(139, 44, 230, 0.2);
        color: var(--text-primary);
    }

    .form-control::placeholder {
        color: var(--text-secondary);
    }

    .form-check-input {
        background: var(--bg-primary);
        border: 1px solid rgba(139, 44, 230, 0.3);
    }

    .form-check-input:checked {
        background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));
        border-color: var(--neon-purple);
    }

    .form-check-label {
        color: var(--text-primary) !important;
        font-weight: 500;
        margin-left: 0.5rem;
    }

    /* BOTONES MEJORADOS */
    .btn-primary {
        background: linear-gradient(135deg, var(--accent-purple), var(--accent-blue));
        border: none;
        border-radius: var(--border-radius-sm);
        color: var(--text-primary);
        font-weight: 600;
        padding: 0.75rem 2rem;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .btn-primary::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s;
    }

    .btn-primary:hover::before {
        left: 100%;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(139, 44, 230, 0.4);
    }

    .btn-secondary {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.3);
        border-radius: var(--border-radius-sm);
        color: var(--text-primary);
        font-weight: 600;
        padding: 0.75rem 2rem;
        transition: all 0.3s ease;
    }

    .btn-secondary:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.5);
        transform: translateY(-2px);
        color: var(--text-primary);
    }

    .btn-danger {
        background: linear-gradient(135deg, var(--danger), #c82333);
        border: none;
        border-radius: var(--border-radius-sm);
        color: var(--text-primary);
        font-weight: 600;
        padding: 0.75rem 1.5rem;
        transition: all 0.3s ease;
    }

    .btn-danger:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(220, 53, 69, 0.4);
        color: var(--text-primary);
    }

    .btn-sm {
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
    }

    /* ALERTAS MEJORADAS */
    .alert {
        border: none;
        border-radius: var(--border-radius-md);
        padding: 1rem 1.5rem;
        margin-bottom: 1.5rem;
    }

    .alert-danger {
        background: linear-gradient(135deg, rgba(220, 53, 69, 0.2), rgba(220, 53, 69, 0.1));
        border: 1px solid rgba(220, 53, 69, 0.3);
        color: var(--text-primary);
    }

    .alert-success {
        background: linear-gradient(135deg, rgba(6, 214, 160, 0.2), rgba(6, 214, 160, 0.1));
        border: 1px solid rgba(6, 214, 160, 0.3);
        color: var(--text-primary);
    }

    .alert i {
        margin-right: 0.5rem;
    }

    /* TABLA DE MIEMBROS MEJORADA */
    .table-responsive {
        border-radius: var(--border-radius-md);
        overflow: hidden;
    }

    .table-dark {
        background: var(--bg-primary);
        border: 1px solid rgba(139, 44, 230, 0.3);
        margin: 0;
    }

    .table-dark th {
        background: linear-gradient(135deg, rgba(139, 44, 230, 0.2), rgba(66, 139, 255, 0.1));
        border-bottom: 2px solid var(--neon-purple);
        color: var(--text-primary);
        font-weight: 700;
        padding: 1rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.85rem;
    }

    .table-dark td {
        color: var(--text-primary) !important;
        padding: 1rem;
        border-bottom: 1px solid rgba(139, 44, 230, 0.1);
        vertical-align: middle;
    }

    .table-dark tr:hover td {
        background: rgba(139, 44, 230, 0.05);
    }

    /* BADGES MEJORADOS */
    .badge {
        padding: 0.5rem 0.75rem;
        border-radius: 20px;
        font-weight: 700;
        font-size: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .bg-warning {
        background: linear-gradient(135deg, var(--warning), #e68900) !important;
        color: var(--text-primary);
    }

    .bg-secondary {
        background: linear-gradient(135deg, var(--text-secondary), #8a8aa8) !important;
        color: var(--text-primary);
    }

    /* ZONA DE PELIGRO MEJORADA */
    .border-top {
        border-top: 2px solid rgba(220, 53, 69, 0.3) !important;
        padding-top: 2rem;
    }

    .border-top h5 {
        color: var(--danger) !important;
        font-weight: 700;
        font-size: 1.1rem;
    }

    .border-top p {
        color: var(--text-secondary) !important;
        font-size: 0.95rem;
        line-height: 1.5;
    }

    /* ESTADOS VACÍOS */
    .text-center.py-4 {
        background: rgba(255, 255, 255, 0.05);
        border: 2px dashed rgba(139, 44, 230, 0.3);
        border-radius: var(--border-radius-lg);
        padding: 3rem 2rem !important;
    }

    .text-center.py-4 .fa-users {
        color: var(--text-secondary);
        opacity: 0.5;
    }

    .text-center.py-4 h5 {
        color: var(--text-primary) !important;
        font-weight: 600;
    }

    /* AVATARES DE USUARIOS */
    .rounded-circle {
        transition: all 0.3s ease;
    }

    .rounded-circle:hover {
        transform: scale(1.05);
        box-shadow: 0 0 15px rgba(139, 44, 230, 0.4);
    }

    .d-flex.align-items-center .rounded-circle {
        border: 2px solid rgba(139, 44, 230, 0.3);
    }

    /* TEXTOS PEQUEÑOS INFORMATIVOS */
    small.text-white {
        color: var(--text-secondary) !important;
        font-size: 0.85rem;
    }

    /* VALIDACIÓN */
    .text-danger {
        color: var(--danger) !important;
        font-size: 0.85rem;
        font-weight: 500;
        margin-top: 0.25rem;
    }

    .field-validation-valid {
        display: none;
    }

    /* MEJORAS DE ESPACIADO */
    .mb-3 {
        margin-bottom: 1.5rem !important;
    }

    .mb-4 {
        margin-bottom: 2rem !important;
    }

    .mt-5 {
        margin-top: 3rem !important;
    }

    .pt-4 {
        padding-top: 2rem !important;
    }
</style>

@section Scripts {
    <script>
        // Inicializar select con la categoría actual
        document.addEventListener('DOMContentLoaded', function() {
            const categoriaActual = '@Model.Categoria';
            if (categoriaActual) {
                const select = document.querySelector('select[name="Categoria"]');
                if (select) {
                    select.value = categoriaActual;
                }
            }

            // Inicializar checkbox con el valor actual
            const esPublicoActual = @Json.Serialize(Model.EsPublico);
            const esPublicoCheckbox = document.querySelector('input[name="EsPublico"]');
            if (esPublicoCheckbox) {
                esPublicoCheckbox.checked = esPublicoActual;
            }

            // Auto-ocultar alertas después de 5 segundos
            setTimeout(function() {
                const alerts = document.querySelectorAll('.alert');
                alerts.forEach(alert => {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);
        });

        async function expulsarMiembro(usuarioId, nombreUsuario) {
            if (confirm(`¿Estás seguro de que quieres expulsar a ${nombreUsuario} del grupo?`)) {
                try {
                    const response = await fetch('/Grupos/ExpulsarMiembro', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            grupoId: @Model.GrupoId,
                            usuarioId: usuarioId
                        })
                    });
                    
                    const result = await response.json();
                    alert(result.message);
                    if (result.success) {
                        location.reload();
                    }
                } catch (error) {
                    alert('Error al expulsar miembro: ' + error.message);
                }
            }
        }

        // Función para eliminar grupo
        async function eliminarGrupo(grupoId, nombreGrupo) {
            if (confirm(`¿ESTÁS ABSOLUTAMENTE SEGURO de que quieres eliminar el grupo "${nombreGrupo}"?\n\nEsta acción NO se puede deshacer y se perderán todos los datos del grupo permanentemente.`)) {
                try {
                    const response = await fetch('/Grupos/EliminarGrupo', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ grupoId: grupoId })
                    });
                    
                    const result = await response.json();
                    alert(result.message);
                    if (result.success) {
                        window.location.href = '/Grupos';
                    }
                } catch (error) {
                    alert('Error al eliminar grupo: ' + error.message);
                }
            }
        }
    </script>
    
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}